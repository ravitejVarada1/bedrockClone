# Unique name for this workflow
name: Feature Branch Validation

# Workflow fires on PR
on: [push]

# Jobs to be executed
jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code in the pull request
      - name: "Checkout source code"
        uses: actions/checkout@v2
        with:
          path: Bedrock

      # Dynamically select token
      - name: Set Secret Credentials
        run: |
          export APPEND_STRING="SFDX_AUTH_"
          export SECRET_NAME=`echo "$APPEND_STRING$GITHUB_ACTOR" | tr -d '-' | tr [:lower:] [:upper:]`
          echo "SECRET_NAME=$SECRET_NAME" >> $GITHUB_ENV

      # Write User Token to File
      - name: Write User Token
        env:
          DYNAMIC_SECRET: ${{ secrets[env.SECRET_NAME] }}
        if: env.DYNAMIC_SECRET != null
        run: "echo ${{ secrets[env.SECRET_NAME] }} > token.txt"

      # If no user token, use default
      - name: Write Default Token
        env:
          DYNAMIC_SECRET: ${{ secrets[env.SECRET_NAME] }}
        if: env.DYNAMIC_SECRET == null
        run: "echo ${{ secrets.SFDX_AUTH_DEFAULT }} > token.txt"

      # Setup Node Actions
      - name: Setup Node Actions
        uses: actions/setup-node@v2
        with:
          node-version: "16"

      # Install NPM
      - name: Install NPM
        run: "npm install -g latest"


      # Install Salesforce CLI
      - name: 'Install Salesforce CLI'
        run: |
            wget https://developer.salesforce.com/media/salesforce-cli/sfdx/channels/stable/sfdx-linux-x64.tar.xz
            mkdir ~/sfdx
            tar xJf sfdx-linux-x64.tar.xz -C ~/sfdx --strip-components 1
            echo "$HOME/sfdx/bin" >> $GITHUB_PATH
            ~/sfdx/bin/sfdx version

      # install SFDX-Git-Delta plugin - https://github.com/scolladon/sfdx-git-delta
      - name: 'Installing sfdx git delta'
        run: | 
            echo y | sfdx plugins:install sfdx-git-delta
            sfdx plugins 

      # Install java
      - name: 'Installing java'
        run: sudo apt-get install openjdk-8-jdk

      # Install SFDX scanner
      - name: 'Installing SFDX scanner'
        run: sfdx plugins:install @salesforce/sfdx-scanner


      # We use SFDX Git Delta to create a directory with only the metadata that has changed, this allows us
      # to deploy only those changes, as opposed to deploying the entire branch. This helps reducing deployment times
      - name: 'Create delta packages for new, modified or deleted metadata'
        run: | 
            mkdir changed-sources
            sfdx sgd:source:delta --to "HEAD" --from "HEAD^" --output changed-sources/ --generate-delta --source force-app/ 

      # Scan the code in the delta directory by using sfdx scanner. Output the results of the scan in a new file
      # called apexScanResults.sarif
      - name: 'Scan code'
        run: |
            cd changed-sources
            sfdx scanner:run --format sarif --target './**/' --outfile 'results.html'  
            cd ..

      - name: Upload SARIF file
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: changed-sources/results.html
